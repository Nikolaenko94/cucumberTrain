import { TestCaseFinished, TestCaseStarted, TestStepResult, TestStepStarted } from '@cucumber/messages';
import { Serenity } from '@serenity-js/core';
import { DomainEvent } from '@serenity-js/core/lib/events';
import { EventDataCollector, IParsedTestStep } from '../types/cucumber';
/**
 * @package
 */
export declare class CucumberMessagesParser {
    private readonly serenity;
    private readonly formatterHelpers;
    private readonly shouldReportStep;
    private readonly testStepFormatter;
    private currentScenario;
    private currentStepActivityId;
    private readonly cwd;
    private readonly eventDataCollector;
    private readonly snippetBuilder;
    private readonly supportCodeLibrary;
    constructor(serenity: Serenity, formatterHelpers: any, // eslint-disable-line @typescript-eslint/explicit-module-boundary-types
    formatterOptionsAndDependencies: {
        cwd: string;
        eventDataCollector: EventDataCollector;
        snippetBuilder: any;
        supportCodeLibrary: any;
    }, shouldReportStep: (parsedTestStep: IParsedTestStep) => boolean);
    parseTestCaseStarted(message: TestCaseStarted): DomainEvent[];
    parseTestStepStarted(message: TestStepStarted): DomainEvent[];
    parseTestStepFinished(message: TestStepStarted): DomainEvent[];
    parseTestCaseFinishes(hookMessage: {
        testCaseStartedId: string;
        result: TestStepResult;
    }): DomainEvent;
    parseTestCaseFinished(message: TestCaseFinished): DomainEvent[];
    private extract;
    private scenarioDetailsFor;
    private outlineFrom;
    private scenarioFrom;
    private scenarioHierarchyTagsFor;
    private stepFrom;
    private parseTestCaseAttempt;
    private activityDetailsFor;
    private outcomeFrom;
    private scenarioOutcomeFrom;
}
